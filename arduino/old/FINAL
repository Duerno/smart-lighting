// Definitions
#define AC_INPUT 2
#define TRIAC_PIN 3
#define AC_HALF_CYCLE_TIME 8333 // [us] Time spent by an AC wave to make a half cycle
#define MAX_DIMMING_LEVEL 128 // Max dimming level

//Sensor de luz

char rx = Serial.read();
 
int ledred = 7; //Led no pino 7
int ledgreen = 8;
int ledblue = 9;
int ldrPin = 0; //LDR no pino analígico 0
int ldrValor = 0; //Valor lido do LDR
int gradativo = 0;

// Global variables
float dimminglevel = 125; // Dimming level (0-128) 0 = ON, 128 = OFF

// Prototypes
void interruptRoutine();
void triggerTheTriac();

// Configure the triac and serial ports
void setup() {
  pinMode(TRIAC_PIN, OUTPUT);
  attachInterrupt(0, interruptRoutine, RISING);
  pinMode(ledred,OUTPUT);
  pinMode(ledgreen,OUTPUT);
  pinMode(ledblue,OUTPUT);
  Serial.begin(9600);
}

// Update the load lighting via serial port
void loop() {
  if (Serial.available() > 0) {
    char letra;
    if(rx >= 'a' && rx <= 'z') {
      if(gradativo < (rx-'a')){
        while(gradativo < (rx - 'a')){
          letra = 25 - gradativo;       
          dimminglevel = letra * 125.0/25 + 1;
          gradativo++;
          Serial.println(gradativo);
          delay(50);
        }      
     // rx = 25 - (rx - 'a'); // rx: 0-25 corresponding to dimminglevel: 5-120
     // dimminglevel = rx * 120.0 / 25 + 5;
      }
      else if(gradativo > (rx-'a')){
        while(gradativo > (rx - 'a')){
          letra = 25 - gradativo;       
          dimminglevel = letra * 125.0/25 + 1;
          gradativo--;
          Serial.println(gradativo); 
          delay(50);
        }
        
      }    
    }
  }
   ///ler o valor do LDR
 ldrValor = analogRead(ldrPin); //O valor lido será entre 0 e 1023
 
   if(ldrValor<300){
     digitalWrite(ledred,HIGH);
     digitalWrite(ledgreen,HIGH);
     digitalWrite(ledblue,HIGH); 
     rx = 'a';
   }
   
   if(ldrValor>=300 && ldrValor<600){
     digitalWrite(ledred,HIGH);
     digitalWrite(ledgreen,LOW);
     digitalWrite(ledblue,LOW);
     rx = 'e';
   }
  
   if (ldrValor >= 600 && ldrValor < 800){
     digitalWrite(ledgreen,HIGH);
     digitalWrite(ledred,LOW);
     digitalWrite(ledblue,LOW);
     rx = 'g';
   }
    if (ldrValor >= 800){
     digitalWrite(ledgreen,LOW);
     digitalWrite(ledblue,HIGH);
     digitalWrite(ledred,LOW);
     rx = 'v';    
   }
   //imprime o valor lido do LDR no monitor serial
   Serial.println(ldrValor);
   delay(300);

}

// This routine is called whenever the AC signal passes through zero.
// It consists in waiting an attenuation time and then triggering the triac, in other words, turning the load on.
void interruptRoutine() {
  // Dimming time per dimming level unit: AC_HALF_CYCLE_TIME / MAX_DIMMING_LEVEL [us]
  float dimmingtime = (1.0 * dimminglevel * AC_HALF_CYCLE_TIME) / MAX_DIMMING_LEVEL;
  delayMicroseconds(dimmingtime); // Off cycle
  triggerTheTriac();
}

// Turn the load on
void triggerTheTriac() {
  digitalWrite(TRIAC_PIN, HIGH);
  delayMicroseconds(AC_HALF_CYCLE_TIME/1000.0);
  digitalWrite(TRIAC_PIN, LOW);
}
